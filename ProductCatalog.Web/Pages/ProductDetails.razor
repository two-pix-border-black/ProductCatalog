@page "/productdetails/{productId:int}"
@using ProductCatalog.Shared.DTOs
@using YourBlazorApp.Services
@inject ApiService ApiService
@inject NavigationManager Navigation

@if (product == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="products-container">
        <div class="product-details">
            <img class="product-image" src="@product.ImageUrl" alt="@product.Name" />
            <div class="product-title"><h2>@product.Name</h2></div>
            <div class="product-price">
                <p style ="font-weight:600">Price: @product.Price kr</p>
                <div class="quantity-control">
                    <button class="btn btn-secondary-decrease" @onclick="DecreaseQuantity">-</button>
                    <span class="btn-quantity">@quantity</span>
                    <button class="btn btn-secondary-increase" @onclick="IncreaseQuantity">+</button>
                </div>
            </div>
            <div class="product-size"><p style="font-weight:600">Size: @product.Size</p></div>
            <div class="product-color">
                <p style="font-weight:600"> Color: 
                @foreach (var color in product.Colors)
                {
                    <span class="color-icon" style="background-color:@color"></span>
                }
                </p>
            </div>
            <div class="product-description">
                <p style="font-weight:600">Description:</p>
                <p>@product.Description</p>
                </div>
            <p>@(product.IsAvailable ? "Available" : "Out of Stock")</p>

            <button class="btn btn-add-cart">+ ADD TO CART</button>
            <button class="btn btn-secondary-return" @onclick="NavigateBack">Back to Product List</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public int productId { get; set; }

    private ProductDetailsDTO product;
    private int quantity = 1;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            product = await ApiService.GetProduct(productId);
        }
        catch (Exception ex)
        {
            // Log error or display message
            Console.WriteLine($"Error loading product details: {ex.Message}");
        }
    }

    private void DecreaseQuantity()
    {
        if (quantity > 1)
        {
            quantity--;
        }
    }

    private void IncreaseQuantity()
    {
        if (quantity < product.Quantity)
        {
            quantity++;
        }
    }

    private void NavigateBack()
    {
        Navigation.NavigateTo("/products");
    }
}
